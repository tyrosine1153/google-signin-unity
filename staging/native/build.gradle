/* Copyright (C) 2018 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
buildscript {
    repositories {
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:2.3.3'
    }
}

allprojects {
    repositories {
        jcenter()
        maven {
            url "https://maven.google.com"
        }
    }
}

apply plugin: 'com.android.library'

group "com.google.signin"

if (project.hasProperty("pluginVersion")) {
  project.version = project.pluginVersion
} else {
  project.version '1.0.0'
}

project.ext.baseName = "google-signin-cpp"

android {
    compileSdkVersion 26
    buildToolsVersion "25.0.3"
    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 26
        versionName project.version
        archivesBaseName = project.ext.baseName
        externalNativeBuild {
            cmake {
                targets 'google-signin-cpp'
                cppFlags "-std=c++11", "-Wall"
            }
        }
        ndk {
            abiFilters 'x86', 'armeabi-v8a'
        }
    }
    lintOptions {
        abortOnError (project.hasProperty("lintAbortOnError") &&
                      (project.lintAbortOnError == "" ||
                       project.lintAbortOnError.toBoolean()))
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt')
        }
    }
    externalNativeBuild {
        cmake {
            path "src/android/CMakeLists.txt"
        }
    }
    sourceSets {
        main {
            java.srcDirs = ['src/android/java']
            manifest.srcFile 'src/android/AndroidManifest.xml'
        }
    }
}

task copy_aar() {
    description = "Copies the local java dependency as an aar to the packaging folder."
    doLast {
        copy {
            from('build/outputs/aar') {
                include '*.aar'
            }
            into 'google-signin-cpp/'
        }
    }
}

project.afterEvaluate {
    assembleRelease.doLast {
        copy {
            from('build/outputs/aar') {
                include '*-release.aar'
            }
            into 'google-signin-cpp/'
        }
    }
    assembleDebug.doLast {
        copy {
            from('build/outputs/aar') {
                include '*-debug.aar'
            }
            into 'google-signin-cpp/'
        }
    }
}

dependencies {
    compile 'com.google.android.gms:play-services-auth:11.8.0'
}
